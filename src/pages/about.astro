---
import BaseLayout from '../layouts/BaseLayout.astro';
import { FaJs, FaReact, FaNodeJs, FaPython } from 'react-icons/fa';
import { SiTypescript, SiAstro, SiJamboard, SiDarkreader } from 'react-icons/si';


const navLinks = [
  { text: 'Whisky', href: "/building"},
  { text: 'AI-Lab', href: "https://lab.zik-3.com"},
];
// Thông tin kỹ năng với logo ngôn ngữ lập trình
const skills = [
  { 
    name: "JavaScript", 
    level: 90, 
    icon: FaJs
  },
  { 
    name: "TypeScript", 
    level: 85, 
    icon: SiTypescript
  },
  { 
    name: "React", 
    level: 88, 
    icon: FaReact
  },
  { 
    name: "Node.js", 
    level: 82, 
    icon: FaNodeJs
  },
  { 
    name: "Python", 
    level: 75, 
    icon: FaPython
  },
  { 
    name: "Astro", 
    level: 80, 
    icon: SiAstro
  }
];

// 工作经历
const jobs = [
  {
    name: "宝洁",
    sec: "CBD",
    city: "湖北",
    nation:"中国",
    url: "https://www.pg.com.cn/",
    beginDate: "2025",
    endDate: "",
    icon: "/logos/P_G_Logo_RGB.svg",
    darkIcon: "",
    role: "",
    description: ""
  },
  {
    name: "莫斯科国立大学",
    sec: "商学院",
    city: "莫斯科",
    nation: "俄罗斯",
    url: "https://msu.ru/",
    beginDate: "2022",
    endDate: "2025",
    icon: "/logos/MSU.png",
    darkIcon: "/logos/MSU_dark.png",
    role: "创新学",
    description: ""
  },
    {
    name: "莫斯科国立大学",
    sec: "物理学院",
    city: "莫斯科",
    nation: "俄罗斯",
    url: "https://msu.ru/",
    beginDate: "2019",
    endDate: "2022",
    icon: "/logos/MSU.png",
    darkIcon: "/logos/MSU_dark.png",
    role: "",
    description: ""
  }
];
---
<BaseLayout title="简介" description="我的个人简介">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 py-8 sm:py-12 md:py-16 theme-transition-all">
    <!-- Hero Section - Improved mobile layout -->
    <div class="relative mb-12 sm:mb-16 md:mb-20">
      <!-- Decorative elements - adjusted for better mobile appearance -->
      <div class="absolute -top-10 sm:-top-20 -left-10 sm:-left-20 w-36 sm:w-48 md:w-72 h-36 sm:h-48 md:h-72 bg-zinc-100 dark:bg-zinc-800/30 rounded-full blur-3xl opacity-30 animate-blob theme-transition-bg"></div>
      <div class="absolute -bottom-10 sm:-bottom-20 -right-10 sm:-right-20 w-36 sm:w-48 md:w-72 h-36 sm:h-48 md:h-72 bg-zinc-200 dark:bg-zinc-800/30 rounded-full blur-3xl opacity-30 animate-blob animation-delay-2000 theme-transition-bg"></div>
      
      <div class="relative grid grid-cols-1 md:grid-cols-2 gap-8 md:gap-12 items-center">
        <div class="order-2 md:order-1 text-center md:text-left">
          <h1 class="text-3xl sm:text-4xl md:text-5xl font-bold tracking-tight text-zinc-900 dark:text-zinc-100 mb-4 sm:mb-6 theme-transition-color">
            哈喽 👋<br>我是 <span class="text-transparent bg-clip-text bg-gradient-to-r from-zinc-500 to-zinc-900 dark:from-zinc-300 dark:to-zinc-100 theme-transition-all">Mitatis</span>
          </h1>
          
          <p class="text-lg sm:text-xl text-zinc-600 dark:text-zinc-400 mb-6 sm:mb-8 leading-relaxed theme-transition-color">
            你也可以叫我 Adrian<br>我来自湖北武汉，曾在莫斯科生活过7年——正在寻找新的旅程
          </p>
          
          <div class="flex flex-wrap gap-4 social-links-container justify-center md:justify-start theme-transition-children">
            <!-- Social links remain the same -->
          </div>
        </div>
        
        <div class="order-1 md:order-2 relative">
          <div class="aspect-square w-full max-w-[280px] sm:max-w-[320px] md:max-w-md mx-auto overflow-hidden rounded-3xl border-4 sm:border-8 border-white dark:border-zinc-800 shadow-xl sm:shadow-2xl theme-transition-all">
            <img 
              src="https://s3.bmp.ovh/imgs/2025/06/02/8437953ff2cfe944.jpg" 
              alt="Profile photo" 
              class="w-full h-full object-cover"
              loading="eager"
            />
          </div>
          
          <!-- Decorative elements - adjusted for mobile -->
          <div class="absolute -bottom-4 sm:-bottom-6 -right-4 sm:-right-6 w-16 sm:w-20 md:w-24 h-16 sm:h-20 md:h-24 bg-zinc-100 dark:bg-zinc-800 rounded-full border-2 sm:border-4 border-white dark:border-zinc-900 shadow-lg flex items-center justify-center theme-transition-all">
            <span class="text-2xl sm:text-3xl">😉</span>
          </div>
        </div>
      </div>
    </div>
    
    <!-- About Section - Improved spacing for mobile -->
    <div class="mb-16 sm:mb-20 md:mb-24 theme-transition-all">
      <div class="max-w-3xl mx-auto">
        <h2 class="text-2xl sm:text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-6 sm:mb-8 flex items-center justify-center md:justify-start theme-transition-color">
          <span class="hidden sm:inline-block w-8 sm:w-12 h-1 bg-zinc-300 dark:bg-zinc-700 mr-4 theme-transition-bg"></span>
          关于
          <span class="hidden sm:inline-block w-8 sm:w-12 h-1 bg-zinc-300 dark:bg-zinc-700 ml-4 theme-transition-bg"></span>
        </h2>
        
        <div class="prose prose-zinc dark:prose-invert max-w-none theme-transition-all">
          <p class="text-base sm:text-lg leading-relaxed mb-4 sm:mb-6 theme-transition-color">
         我会在这里写一些主观性的，基于个人真实经历而创作的文字/声音。如果你感兴趣的话，欢迎访问我的其他网站：
          </p>
          <!-- Other paragraphs remain the same -->
           <div class="col-span-1 md:col-span-6">
          <ul class="mt-4 space-y-3">
            {navLinks.map(link => (
              <li>
                <a 
                  href={link.href} 
                  class="group flex items-center text-base text-zinc-600 hover:text-zinc-900 dark:text-zinc-400 dark:hover:text-zinc-100 transition-colors"
                  target="_blank" rel="noopener noreferrer"
                >
                  <span class="relative overflow-hidden inline-block">
                    <span class="relative z-10">{link.text}</span>
                    <span class="absolute left-0 bottom-0 w-0 h-0.5 bg-zinc-800 dark:bg-zinc-200 transition-all duration-300 group-hover:w-full"></span>
                  </span>
                </a>
              </li>
            ))}
          </ul>
        </div>
        </div>
      </div>
    </div>

    <div class="mb-16 sm:mb-20 md:mb-24 theme-transition-all">
      <div class="max-w-3xl mx-auto">
        <h2 class="text-2xl sm:text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-6 sm:mb-8 flex items-center justify-center md:justify-end theme-transition-color">
          <span class="hidden sm:inline-block w-8 sm:w-12 h-1 bg-zinc-300 dark:bg-zinc-700 mr-4 theme-transition-bg"></span>
          写作
          <span class="hidden sm:inline-block w-8 sm:w-12 h-1 bg-zinc-300 dark:bg-zinc-700 ml-4 theme-transition-bg"></span>
        </h2>
        
        <div class="prose prose-zinc dark:prose-invert max-w-none theme-transition-all">
          <p class="text-base sm:text-lg leading-relaxed mb-4 sm:mb-6 theme-transition-color">
          我受存在主义影响，在文学上钟爱陀翁与现代主义。因此这类作品、和其他主张理性与唯心的相关著作，对我的生活与写作影响颇深。
          </p>
          <p class="text-base sm:text-lg leading-relaxed mb-4 sm:mb-6 theme-transition-color">
          和大多数人不同，我对诗歌的认知主要来自电影《死亡诗社》。在和片中相仿的学生时代，我通过电影里对诗歌的再解读重新认识了这一载体，并断断续续开始尝试以模仿为主的自我创作。
          </p>
          <p class="text-base sm:text-lg leading-relaxed mb-4 sm:mb-6 theme-transition-color">
          我真正的诗歌创作同样始于第七艺术：从《雕刻时光》，再到《潜行者》、《索拉里斯星》。导演
                <a 
                  href={"https://www.imdb.com/name/nm0001789/?ref_=nv_sr_srsg_0_tt_4_nm_4_in_0_q_tarko"} 
                  target="_blank" rel="noopener noreferrer"
                  class="group items-center text-zinc-600 hover:text-zinc-900 dark:text-zinc-400 dark:hover:text-zinc-100 transition-colors"
                >
                  <span>安德烈·塔可夫斯基</span>
                </a>  
                用视听语言塑造了我对诗意表达的认知。
          </p>
          <!-- Other paragraphs remain the same -->
        </div>
      </div>
    </div>

    
    <!-- Skills Section - Improved for mobile -->
    <div class="mb-8 sm:mb-10 md:mb-12 theme-transition-all">
      <h2 class="text-2xl sm:text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-8 sm:mb-12 text-center theme-transition-color">在路上</h2>  
      <!-- <div class="tech-stack-slider relative overflow-hidden py-4 sm:py-8"> -->
    </div>
        <!-- <div class="slider-track flex animate-slide">
          {[...skills, ...skills, ...skills].map((skill, index) => (
            <div key={`${skill.name}-${index}`} class="skill-card min-w-[220px] sm:min-w-[280px] mx-2 sm:mx-4 bg-white dark:bg-zinc-800/50 rounded-xl border border-zinc-200 dark:border-zinc-700 hover:border-zinc-300 dark:hover:border-zinc-600 transition-all duration-300 hover:shadow-xl transform hover:-translate-y-2 hover:scale-105 theme-transition-element">
              <div class="p-4 sm:p-6">
                <div class="flex items-center justify-between mb-4 sm:mb-6">
                  <div class="flex items-center gap-2 sm:gap-4">
                    <div class="w-8 h-8 sm:w-12 sm:h-12 flex items-center justify-center bg-zinc-100 dark:bg-zinc-800 rounded-lg text-zinc-800 dark:text-zinc-200 transform transition-transform group-hover:rotate-12 theme-transition-bg theme-transition-color">
                      <skill.icon size={20} className="sm:text-2xl transform transition-all hover:scale-125" />
                    </div>
                    <h3 class="text-base sm:text-xl font-semibold text-zinc-900 dark:text-zinc-100 theme-transition-color">{skill.name}</h3>
                  </div>
                  <span class="text-xs sm:text-sm font-mono bg-zinc-100 dark:bg-zinc-800 text-zinc-600 dark:text-zinc-400 px-2 py-0.5 sm:px-2.5 sm:py-1 rounded-full theme-transition-all">{skill.level}%</span>
                </div>
                
                <div class="relative h-1.5 sm:h-2 w-full bg-zinc-100 dark:bg-zinc-700 overflow-hidden rounded-full theme-transition-bg">
                  <div 
                    class="absolute top-0 left-0 h-full bg-gradient-to-r from-zinc-700 via-zinc-600 to-zinc-800 dark:from-zinc-300 dark:via-zinc-400 dark:to-zinc-200 rounded-full transition-all duration-1000 progress-bar-animate theme-transition-bg"
                    style={`width: ${skill.level}%`}
                  ></div>
                </div>
                
                <div class="flex justify-between mt-1 sm:mt-2 text-[10px] sm:text-xs text-zinc-400 dark:text-zinc-500 font-mono theme-transition-color">
                  <span>Beginner</span>
                  <span>Advanced</span>
                </div>
              </div>
            </div>
          ))}
        </div> -->
        
        <!-- Gradient overlays for smooth fade effect -->
        <!-- <div class="absolute top-0 bottom-0 left-0 w-12 sm:w-24 bg-gradient-to-r from-white dark:from-zinc-900 to-transparent z-10 theme-transition-bg"></div>
        <div class="absolute top-0 bottom-0 right-0 w-12 sm:w-24 bg-gradient-to-l from-white dark:from-zinc-900 to-transparent z-10 theme-transition-bg"></div>
      </div>
    </div> -->
    
    <!-- Experience Timeline -->
    {jobs.map(job => (
        <div class="relative flex items-center gap-6 py-6 md:py-8 w-full">
          <!-- Vertical timeline line -->
          <span class="absolute left-0 top-0 bottom-0 w-px bg-zinc-300 dark:bg-zinc-700"></span>

          <!-- Time -->
          <div class="w-10 font-mono text-zinc-500 dark:text-zinc-400 pl-3 text-center  text-xs sm:text-sm">
            {job.endDate && (<div>{job.endDate}
            |</div>
            )}
            {job.beginDate}
          </div>

          <!-- Company logo (clickable) -->
          <a
            href={job.url}
            target="_blank" rel="noopener noreferrer"
            class="items-center justify-end w-12 theme-transition-color"
          >
              <img
                src={job.icon}
                alt={job.name}
                class="object-contain w-full h-full block dark:hidden"
              />
              <img
                src={job.darkIcon ? job.darkIcon : job.icon}
                alt={job.name}
                class="object-contain w-full h-full hidden dark:block"
              />
          </a>

          <!-- place -->
          <div class="w-60 text-left font-mono text-xs sm:text-sm text-zinc-700 dark:text-zinc-300">
            <div class="font-bold text-zinc-900 dark:text-zinc-100 text-left theme-transition-color">{job.name}</div>
            <div>{job.sec}</div>
            <div>{job.role}</div>
          </div>

          <!-- Two-column description -->
          {/* <div class="w-10 grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm sm:text-base text-zinc-700 dark:text-zinc-300">
            {job.description.map((line, idx) => (
              <p key={idx}>{line}</p>
            ))}
          </div> */}

          <!-- description -->
          <div class="flex justify-start text-left font-mono text-xs sm:text-sm text-zinc-800 dark:text-zinc-200">
            {job.description}
          </div>

          <!-- location -->
          <div class="font-bold w-40 text-right font-mono text-xs sm:text-sm text-zinc-900 dark:text-zinc-100">
            <div>{job.city}</div>
            {/* <div>{job.nation}</div> */}
          </div>
        </div>
      ))}

    <!-- Contact Section - Improved for mobile -->
    <div class="max-w-3xl mx-auto text-center theme-transition-all mt-16">

      <h2 class="text-2xl sm:text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-4 sm:mb-6 theme-transition-color">联系我</h2>
      <p class="text-base sm:text-lg text-zinc-600 dark:text-zinc-400 mb-6 sm:mb-8 theme-transition-color">
        欢迎给我写信！并在任何地方与我取得联系，我的微信号是：mitatis
      </p>
      
      <a 
        href="https://letterbird.co/mitatis" 
        class="inline-flex items-center justify-center px-6 sm:px-8 py-3 sm:py-4 rounded-lg bg-zinc-900 dark:bg-zinc-100 text-zinc-100 dark:text-zinc-900 hover:bg-zinc-700 dark:hover:bg-zinc-300 transition-colors text-base sm:text-lg font-medium theme-transition-all"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
        </svg>
        打个招呼
      </a>
    </div>
  </div>
</BaseLayout>

<style>
  /* Blob animation */
  .animate-blob {
    animation: blob-bounce 8s infinite ease;
  }
  
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  
  @keyframes blob-bounce {
    0%, 100% {
      transform: translate(0, 0) scale(1);
    }
    25% {
      transform: translate(5%, 5%) scale(1.05);
    }
    50% {
      transform: translate(0, 10%) scale(1);
    }
    75% {
      transform: translate(-5%, 5%) scale(0.95);
    }
  }
  
  /* Tech Stack Slider - Seamless infinite loop */
  .slider-track {
    width: fit-content;
    animation: scroll 40s linear infinite;
  }
  
  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(calc(-220px * 6 - 16px * 6)); /* Card width + margin for mobile */
    }
  }
  
  @media (min-width: 640px) {
    .slider-track {
      animation: scroll 60s linear infinite;
    }
    
    @keyframes scroll {
      0% {
        transform: translateX(0);
      }
      100% {
        transform: translateX(calc(-280px * 6 - 32px * 6)); /* Card width + margin for desktop */
      }
    }
  }
  
  .tech-stack-slider:hover .slider-track {
    animation-play-state: paused;
  }
  
  .skill-card {
    transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    overflow: hidden;
  }
  
  .skill-card:hover {
    z-index: 10;
  }
  
  /* Reduce animation complexity on mobile for better performance */
  @media (max-width: 640px) {
    .skill-card {
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .skill-card:hover {
      transform: translateY(-5px) !important;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1) !important;
    }
  }
  
  .skill-card:before {
    content: '';
    position: absolute;
    top: -10%;
    left: -10%;
    width: 120%;
    height: 120%;
    background: radial-gradient(circle at center, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
    opacity: 0;
    transition: opacity 0.5s ease;
    pointer-events: none;
  }
  
  .skill-card:hover:before {
    opacity: 1;
  }
  
  .progress-bar-animate {
    position: relative;
    overflow: hidden;
  }
  
  .progress-bar-animate:after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    animation: progress-shine 2s infinite;
  }
  
  @keyframes progress-shine {
    0% {
      left: -100%;
    }
    100% {
      left: 100%;
    }
  }
  
  /* Improved touch targets for mobile */
  @media (max-width: 640px) {
    a, button {
      min-height: 44px;
      display: flex;
      align-items: center;
    }
    
    .social-link {
      min-width: 44px;
      min-height: 44px;
    }
  }
  
  /* Theme transition effect */
  :global(.theme-switching) .theme-transition-element {
    animation: fadeIn 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  
  /* Smooth card transition during theme switch */
  .skill-card.theme-transition-element {
    transition: background-color var(--theme-transition), 
                border-color var(--theme-transition), 
                color var(--theme-transition), 
                box-shadow var(--theme-transition),
                transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }
</style>

<script>
  // Wait for the DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    const sliderTrack = document.querySelector('.slider-track');
    
    // Create seamless infinite scrolling effect
    function setupInfiniteScroll() {
      const cards = document.querySelectorAll('.skill-card');
      if (!cards.length) return;
      
      // Clone the first set of cards and append to create seamless loop
      const firstSetCount = cards.length / 3; // We have 3 sets in the markup
      
      // Set proper animation based on screen size
      function updateScrollAnimation() {
        if (window.innerWidth >= 640) {
          sliderTrack.style.animation = 'scroll 60s linear infinite';
        } else {
          sliderTrack.style.animation = 'scroll 40s linear infinite';
        }
      }
      
      updateScrollAnimation();
      window.addEventListener('resize', updateScrollAnimation);
    }
    
    setupInfiniteScroll();
    
    // Pause animation on hover/touch
    sliderTrack?.addEventListener('mouseenter', () => {
      sliderTrack.style.animationPlayState = 'paused';
    });
    
    sliderTrack?.addEventListener('touchstart', () => {
      sliderTrack.style.animationPlayState = 'paused';
    });
    
    sliderTrack?.addEventListener('mouseleave', () => {
      sliderTrack.style.animationPlayState = 'running';
    });
    
    sliderTrack?.addEventListener('touchend', () => {
      setTimeout(() => {
        sliderTrack.style.animationPlayState = 'running';
      }, 1000); // Delay resuming animation after touch
    });
    
    // Add hover effects to cards - only on non-touch devices
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
    const cards = document.querySelectorAll('.skill-card');
    
    if (!isTouchDevice) {
      cards.forEach(card => {
        card.addEventListener('mousemove', (e) => {
          const rect = card.getBoundingClientRect();
          const x = e.clientX - rect.left;
          const y = e.clientY - rect.top;
          
          const centerX = rect.width / 2;
          const centerY = rect.height / 2;
          
          const angleX = (y - centerY) / 15;
          const angleY = (centerX - x) / 15;
          
          card.style.transform = `perspective(1000px) rotateX(${angleX}deg) rotateY(${angleY}deg) scale(1.08) translateZ(20px)`;
          
          // Dynamic shadow based on tilt
          const shadowX = (x - centerX) / 25;
          const shadowY = (y - centerY) / 25;
          card.style.boxShadow = `
            ${shadowX}px ${shadowY}px 20px rgba(0, 0, 0, 0.1),
            0 10px 20px rgba(0, 0, 0, 0.05)
          `;
        });
        
        card.addEventListener('mouseleave', () => {
          card.style.transform = '';
          card.style.boxShadow = '';
        });
      });
    } else {
      // Simpler effects for touch devices
      cards.forEach(card => {
        card.addEventListener('touchstart', () => {
          card.classList.add('is-touched');
        });
        
        card.addEventListener('touchend', () => {
          setTimeout(() => {
            card.classList.remove('is-touched');
          }, 300);
        });
      });
    }
    
    // Handle theme transition
    document.addEventListener('themeChange', () => {
      // Add special effects during theme transition
      cards.forEach((card, index) => {
        // Add staggered animation delay
        setTimeout(() => {
          card.classList.add('theme-changing');
          setTimeout(() => {
            card.classList.remove('theme-changing');
          }, 600);
        }, index * 50);
      });
    });
  });
</script>

<script>
  // Handle SPA transitions for about page
  function setupSPATransitions() {
    // Handle all internal links for SPA transitions
    document.querySelectorAll('a[href^="/"]').forEach(link => {
      // Skip links that are anchor links, external links, or already processed
      if (link.getAttribute('href').includes('#') || 
          link.getAttribute('target') === '_blank' || 
          link.hasAttribute('data-spa-handled')) {
        return;
      }
      
      // Mark as handled to avoid duplicate listeners
      link.setAttribute('data-spa-handled', 'true');
      
      link.addEventListener('click', (e) => {
        // Don't handle if modifier keys are pressed (for opening in new tab, etc.)
        if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) {
          return;
        }
        
        e.preventDefault();
        const targetHref = link.getAttribute('href');
        
        // Trigger page transition animation
        const pageTransition = document.getElementById('page-transition');
        if (pageTransition) {
          pageTransition.classList.remove('opacity-0');
          pageTransition.classList.add('opacity-100');
          
          // Navigate after transition effect
          setTimeout(() => {
            window.location.href = targetHref;
          }, 300);
        } else {
          // Fallback if transition element doesn't exist
          window.location.href = targetHref;
        }
      });
    });
    
    // Initialize animations for about page
    function animateAboutContent() {
      // Animate hero section elements
      const heroElements = document.querySelectorAll('h1, .order-2 p, .social-links-container');
      heroElements.forEach((el, index) => {
        setTimeout(() => {
          el.classList.add('animate-reveal');
        }, 100 + (index * 150));
      });
      
      // Animate profile image
      const profileImage = document.querySelector('.aspect-square');
      if (profileImage) {
        setTimeout(() => {
          profileImage.classList.add('animate-reveal');
        }, 200);
      }
      
      // Animate skill bars with staggered delay
      const skillBars = document.querySelectorAll('.skill-bar');
      skillBars.forEach((bar, index) => {
        setTimeout(() => {
          bar.classList.add('animate-skill');
        }, 500 + (index * 100));
      });
      
      // Animate sections with staggered delay
      const sections = document.querySelectorAll('section');
      sections.forEach((section, index) => {
        setTimeout(() => {
          section.classList.add('animate-reveal');
        }, 300 + (index * 200));
      });
    }
    
    // Run animations
    animateAboutContent();
  }
  
  // Initialize on first load
  document.addEventListener('DOMContentLoaded', setupSPATransitions);
  
  // Re-initialize when content changes via Astro's view transitions
  document.addEventListener('astro:page-load', setupSPATransitions);
  
  // For compatibility with custom transition system
  document.addEventListener('page-transition-complete', setupSPATransitions);
</script>